{"version":3,"sources":["components/space/SpaceItem.js","components/space/SpaceList.js","components/space/SpaceMenu.js","components/ModalForm.js","components/ModalButton.js"],"names":["SpaceItem","space","history","useHistory","useContext","SpaceContext","dispatchSpace","useState","spaceState","setSpaceState","formData","setFormData","modalTitle","setModalTitle","errors","setErrors","placeholders","submitAction","setSubmitAction","handleIsErrorCheck","submittedData","obj","bol","hasOwnProperty","checkLeaveDeleteInput","handleDataSubmit","a","Object","keys","length","httpSpaceAction","DELETE","LEAVE","EDIT","type","payload","data","user_id","JSON","parse","localStorage","getItem","_id","space_id","updatedSpace","className","onClick","push","RouterPaths","ProjectMenu","urlPathText","name","StatusTemplateForm","canEdit","ModalButton","modalFormId","text","editableData","email","canLeave","canDelete","color","StatusTemplatesView","title","join_code","ModalForm","onSubmit","inputData","isError","spaceList","spaces","map","SpaceMenu","JOIN","SpaceList","stateInputData","setStateInputData","changeInput","e","key","target","id","value","selectedOptions","useEffect","closeModal","window","$","modal","tabIndex","preventDefault","entries","index","element","onChange","required","placeholder","htmlFor","style","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"static/js/7.f0bb42c7.chunk.js","sourcesContent":["\r\nimport React,{useState,useContext} from 'react'\r\nimport { useHistory,Link } from 'react-router-dom'\r\nimport ModalForm from '../ModalForm'\r\nimport ModalButton from '../ModalButton'\r\nimport { SpaceContext , httpSpaceAction} from \"../../context/SpaceContext\"\r\nimport RouterPaths from '../RouterPaths'\r\n\r\nconst SpaceItem = ({space}) => {\r\n\r\n    const history = useHistory();\r\n    const [spaces,dispatchSpace]= useContext(SpaceContext);\r\n    const [spaceState,setSpaceState]=useState(space)\r\n    const [formData,setFormData]= useState({})\r\n    const [modalTitle,setModalTitle]=useState('');\r\n    const [errors,setErrors]=useState({})\r\n    const [placeholders,setPlaceholders]=useState({'Leave Space':'type lev','Delete Space':'type del'})\r\n    const [submitAction,setSubmitAction]=useState('')\r\n\r\n\r\n\r\n\r\n    const handleSpaceClick =()=>{\r\n        history.push(RouterPaths().ProjectMenu.urlPathText({space_id:spaceState._id}))\r\n    }\r\n    const handleStatusTemplate =()=>{\r\n        history.push(RouterPaths().StatusTemplateForm.urlPathText({space_id:spaceState._id}))\r\n    }\r\n\r\n    const hadnleOnClickTemplates =()=>{\r\n        history.push(RouterPaths().StatusTemplatesView.urlPathText({space_id:spaceState._id}))\r\n    }\r\n\r\n    const handleOnClickEdit =()=>{\r\n        let editableData={name:spaceState.name};\r\n        setFormData(editableData);\r\n        setModalTitle(`Edit  ${spaceState.name}`);\r\n        setSubmitAction(httpSpaceAction.EDIT);\r\n    }\r\n    const handleOnClickLeave =()=>{\r\n        let editableData={'Leave Space':''};\r\n        setFormData(editableData);\r\n        setModalTitle(`Leave  ${spaceState.name}`);\r\n        setSubmitAction(httpSpaceAction.LEAVE);\r\n    }\r\n    const handleOnClickDelete =()=>{\r\n        let editableData={'Delete Space':''};\r\n        setFormData(editableData);\r\n        setModalTitle(`Delete  ${spaceState.name}`);\r\n        setSubmitAction(httpSpaceAction.DELETE);\r\n    }\r\n\r\n  \r\n\r\n    const checkLeaveDeleteInput=(obj)=>{\r\n        let bol=false;\r\n        if (obj.hasOwnProperty('Leave Space') && obj['Leave Space'] === 'lev') {         \r\n           setErrors({})\r\n        }else if(obj.hasOwnProperty('Leave Space') && obj['Leave Space'] !== 'lev'){\r\n            setErrors({'Leave Space':'Invalid! Enter Lowercase lev'})\r\n            bol=true;\r\n        }\r\n        if (obj.hasOwnProperty('Delete Space') && obj['Delete Space'] === 'del') {\r\n            setErrors({})            \r\n        }else if(obj.hasOwnProperty('Delete Space') && obj['Delete Space'] !== 'del'){\r\n            setErrors({'Delete Space':'Invalid! Enter Lowercase del'})\r\n            bol=true;\r\n        }\r\n        return bol\r\n    }\r\n\r\n    const handleIsErrorCheck =(submittedData)=>{\r\n       return checkLeaveDeleteInput(submittedData);\r\n       \r\n    }\r\n\r\n    \r\n    const handleDataSubmit= async (submittedData)=>{\r\n         \r\n        if (Object.keys(errors).length === 0) {\r\n            switch (submitAction) {\r\n                case httpSpaceAction.DELETE:\r\n                    dispatchSpace({type:httpSpaceAction.DELETE,payload:space})\r\n                    setSpaceState({})\r\n                case httpSpaceAction.LEAVE:\r\n                    let data ={};\r\n                    data.user_id=JSON.parse(localStorage.getItem('user'))._id\r\n                    data.space_id=space._id\r\n                    dispatchSpace({type:httpSpaceAction.LEAVE,payload:data})\r\n                    setSpaceState({})\r\n                case httpSpaceAction.EDIT:\r\n                    let updatedSpace={...space,...submittedData};\r\n                    updatedSpace= await dispatchSpace({type:httpSpaceAction.EDIT,payload:updatedSpace}) \r\n                    setSpaceState( updatedSpace)\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n  \r\n    return (\r\n        <>\r\n        {\r\n           spaceState ? \r\n           \r\n           <div className=\" my-2 d-flex flex-row\">\r\n               <button className=\" mx-2\" onClick={handleSpaceClick}>{spaceState.name}</button>\r\n\r\n               <button className=\" mx-2\" onClick={handleStatusTemplate}>+ Template</button>\r\n               \r\n   \r\n               <div className=\"dropdown mx-2 \">\r\n                   <button className=\"dropbtn \"><i className=\"fas fa-ellipsis-h dropbtn\"></i></button>\r\n                   \r\n                   <ul className=\"dropdown-content\">\r\n                       <li >\r\n                       {spaceState.canEdit ?\r\n                            <ModalButton modalFormId={'spaceitem'+spaceState._id} text='edit' onClick={handleOnClickEdit}/>\r\n                            : ''\r\n                       }\r\n                       </li>\r\n                       <li >\r\n                           <ModalButton modalFormId={'spaceitem'+spaceState._id}  text='invite' onClick={()=>{setFormData({email:''});setModalTitle(`Invite ${space.name}`)}}/>\r\n                       </li>\r\n                       {space.canLeave?\r\n                        <li >\r\n                            <ModalButton modalFormId={'spaceitem'+spaceState._id}  text='leave' onClick={handleOnClickLeave}/>\r\n                        </li>\r\n                        :''\r\n                        }\r\n                       <li>\r\n                           {space.canDelete?\r\n                               <ModalButton modalFormId={'spaceitem'+spaceState._id}  text='delete' color='red' onClick={handleOnClickDelete}/>\r\n                               :''\r\n                           }\r\n                       </li>\r\n                       \r\n                       <li>\r\n                            <button onClick={hadnleOnClickTemplates}>Custom Templates</button>\r\n                       </li>\r\n                       <li >\r\n                          <span className='badge' title='Join Code'>{space.join_code}</span> \r\n                          \r\n                       </li>\r\n                   </ul>\r\n               </div>\r\n   \r\n               <ModalForm  modalFormId={'spaceitem'+spaceState._id}  onSubmit={(submittedData)=>{ handleDataSubmit(submittedData)}} modalTitle={modalTitle} inputData={formData} placeholders={placeholders} errors={errors} isError={(submittedData)=>{return handleIsErrorCheck(submittedData)}}/>\r\n   \r\n               </div>\r\n                \r\n                :null\r\n         } \r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default SpaceItem\r\n","import React from 'react'\r\nimport SpaceItem from './SpaceItem'\r\n\r\n\r\nconst spaceList = ({spaces}) => {\r\n\r\n    return (\r\n       <>\r\n                {spaces.map((space)=>{\r\n                    return <SpaceItem \r\n                    key={space._id} \r\n                    space={space} \r\n                    ></SpaceItem>\r\n                })}  \r\n      </>\r\n    )\r\n}\r\n\r\nexport default spaceList\r\n","import React, { useEffect, useState,useContext } from 'react'\r\nimport ModalForm from '../ModalForm'\r\nimport ModalButton from '../ModalButton'\r\nimport SpaceList from './SpaceList'\r\nimport { SpaceContext , httpSpaceAction} from \"../../context/SpaceContext\"\r\n\r\nconst SpaceMenu = () => {\r\n    const [spaces,dispatchSpace]= useContext(SpaceContext);\r\n    const[formData,setFormData]= useState({})\r\n    const[modalTitle,setModalTitle]=useState('');\r\n\r\n   \r\n\r\n    const handleDataSubmit= async (data)=>{\r\n        // Join a Space or Create a Space\r\n        if (data.join_code) {\r\n            data.user_id=JSON.parse(localStorage.getItem('user'))._id\r\n          await dispatchSpace({type:httpSpaceAction.JOIN,payload:data})\r\n        }else{\r\n            dispatchSpace({type:httpSpaceAction.EDIT,payload:data})\r\n        }\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"border-top border-bottom p-2  d-flex flex-column flex-wrap  align-items-start \">\r\n            <div className=\"my-2 d-flex flex-row align-items-center\">\r\n                <h6 className=\"\">Spaces</h6>\r\n                <ModalButton className='m-2' modalFormId='spacemenu' text='+ New' onClick={()=>{setFormData({name:''});setModalTitle('New Space')}}/>\r\n                <ModalButton className='m-2' modalFormId='spacemenu' text='<i class=\"fas fa-handshake\"></i> Join '  onClick={()=>{setFormData({join_code:''});setModalTitle('Join A Space')}}/>\r\n            </div>\r\n            <ModalForm  modalFormId='spacemenu' onSubmit={(data)=>{ handleDataSubmit(data)}} modalTitle={modalTitle} inputData={formData} />\r\n\r\n\r\n            <SpaceList spaces={spaces} />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpaceMenu\r\n","import PropTypes from 'prop-types'\r\nimport { useState ,useEffect} from 'react';\r\nimport * as $ from \"jquery\";\r\n\r\n\r\nconst ModalForm = ({modalTitle,onSubmit,inputData,modalFormId,placeholders={},errors={},isError=false}) => {\r\n    const [stateInputData, setStateInputData] = useState(inputData);\r\n\r\n    const changeInput=(e)=>{\r\n        let key = e.target.id;\r\n        let data ={};\r\n       \r\n       \r\n        \r\n        \r\n        if (key !=='active_status_template') {\r\n            data[key]=e.target.value\r\n            setStateInputData({...stateInputData,...data})\r\n        }\r\n        if (key =='active_status_template') {\r\n            data[key]=e.target.selectedOptions[0].value\r\n            setStateInputData({...stateInputData,...data})\r\n        }\r\n        \r\n\r\n       \r\n    }\r\n    \r\n    // Run Once only when inputdata from param comes in\r\n    useEffect(()=>{\r\n        setStateInputData(inputData);\r\n    },[inputData])\r\n\r\n    const closeModal=()=>{\r\n        // Using Jquery to close Boostrap Modal\r\n        window.$(`#${modalFormId}`).modal('hide');\r\n    }\r\n\r\n   \r\n    \r\n  \r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if (typeof isError === 'function' ) {\r\n            if (!isError(stateInputData) ) {\r\n                onSubmit(stateInputData)\r\n                closeModal(); \r\n            }  \r\n        }else{\r\n            onSubmit(stateInputData)\r\n                closeModal();\r\n        }\r\n           \r\n\r\n    }\r\n  \r\n    \r\n\r\n    return (\r\n        <div>\r\n           \r\n            <div  className='modal fade ' id={modalFormId} tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-dialog-centered\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">  \r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">{modalTitle}</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <form onSubmit={handleSubmit} className=\"needs-validation\" >\r\n                        {\r\n                            \r\n                            Object.entries(inputData).map(([key,value], index)=>{\r\n                                let element=null;\r\n                                if (key=='active_status_template') {\r\n                                   element =<select className=\"form-select\" id={key} name=\"active_status_template\" onChange={changeInput} required>\r\n                                        <option value='' className='fw-light'>please select</option>\r\n                                        {\r\n                                            value.map(({_id,name},key)=>(\r\n                                                \r\n                                               key==0 ? <option  value={_id}> { name + key}</option>:\r\n                                                <option value={_id}>{name+ key}</option>\r\n                                            ))\r\n                                        }\r\n                                        </select> \r\n                                 }else{\r\n                                     element=<input type=\"text\" className=\"form-control \" id={key} \r\n                                     placeholder={placeholders[key]?placeholders[key]:''}\r\n                                     value={stateInputData[key]} onChange={changeInput}\r\n                                     required\r\n                                     />\r\n                                 }\r\n\r\n                                return<div className=\"mb-3\" key={index}> \r\n                                        <label htmlFor=\"text\" className=\"col-form-label\" style={{ 'textTransform': 'capitalize'}}>{key}</label>\r\n                                            {element}                                            \r\n                                        <div className=\"text-danger form-text\">\r\n                                         {errors[key]?errors[key]:''}\r\n                                        </div>\r\n                                         \r\n                                        <div className=\"invalid-feedback\">\r\n        Please choose a username.\r\n      </div>\r\n                                    </div>\r\n                            })\r\n                        }\r\n                        <div className=\"mb-2 d-flex justify-content-end\">\r\n                            <button type=\"submit\" className=\" ml-auto\" >Save</button>\r\n                        </div>  \r\n                   </form>\r\n\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nModalForm.propTypes={\r\n    modalTitle:PropTypes.string,\r\n    inputData:PropTypes.object,\r\n    onSubmit:PropTypes.func\r\n}\r\n\r\nexport default ModalForm\r\n","\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ModalButton = ({text,onClick,color,modalFormId,className}) => {\r\n\r\n    return (\r\n        <button dangerouslySetInnerHTML={{ __html: text }} onClick={onClick} \r\n                type=\"button\" className={'p-1 '+ className}\r\n                data-bs-toggle=\"modal\" \r\n                data-bs-target={'#'+modalFormId}\r\n                style={{color:color}}>\r\n            {}\r\n        </button>\r\n    )\r\n}\r\n\r\nModalButton.propTypes={\r\n    text:PropTypes.string,\r\n    modalFormId:PropTypes.string,\r\n    color:PropTypes.string,\r\n    width:PropTypes.string,\r\n    onClick:PropTypes.func\r\n}\r\n\r\nexport default ModalButton\r\n"],"sourceRoot":""}