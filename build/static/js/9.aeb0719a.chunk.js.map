{"version":3,"sources":["components/status/StatusTemplateForm.js"],"names":["StatusTemplateForm","history","useHistory","useState","status","color","orderindex","statuses","setStatuses","templateName","setTemplateName","useParams","space_id","template_id","useEffect","a","console","log","getSpaceItem","_id","space","custom_statuses","filter","String","custom_status","name","handleInputChange","e","index","target","value","updated_statuses","handleFormSubmit","preventDefault","map","type","data","customStatuses","push","RouterPaths","StatusTemplatesView","urlPathText","class","method","onSubmit","className","htmlFor","onChange","required","onClick","splice","forEach","handleRemoveClick","style","cursor","placeholder","border","marginLeft","padding","height","length"],"mappings":"0LAsHeA,UAjHY,WACvB,IAAMC,EAAUC,cAChB,EAAgCC,mBAAS,CAAC,CAACC,OAAO,OAAOC,MAAM,UAAUC,WAAW,KAAK,CAACF,OAAO,QAAQC,MAAM,UAAUC,WAAW,OAApI,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwCL,mBAAS,IAAjD,mBAAOM,EAAP,KAAqBC,EAArB,KACA,EAA+BC,cAAxBC,EAAP,EAAOA,SAASC,EAAhB,EAAgBA,YAEhBC,oBAAS,sBAAC,kCAAAC,EAAA,6DACNC,QAAQC,IAAIJ,GADN,SAEaK,YAAa,CAACC,IAAIP,IAF/B,OAEDQ,EAFC,OAGPJ,QAAQC,IAAIG,GAHL,EAIeA,EAAMC,gBAAgBC,QAAO,gBAAEH,EAAF,EAAEA,IAAF,OAAUI,OAAOJ,IAASI,OAAOV,MAJ7E,mBAIAW,EAJA,KAKPR,QAAQC,IAAIO,GACPA,IACDhB,EAAYgB,EAAcjB,UAC1BG,EAAgBc,EAAcC,OAR3B,2CAWR,CAACZ,IAIL,IAAMa,EAAoB,SAACC,EAAGC,GAC5B,MAAwBD,EAAEE,OAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACRC,EAAgB,YAAOxB,GAC7BwB,EAAiBH,GAAOH,GAAQK,EAChCtB,EAAYuB,IAmBRC,EAAgB,uCAAG,WAAML,GAAN,iBAAAZ,EAAA,6DACvBY,EAAEM,iBACGF,EAAkBxB,EAAS2B,KAAI,SAAC9B,GAEjC,OADAA,EAAO+B,KAAM1B,EACNL,KAELgC,EAAO,CACTxB,SAASA,EACTY,cAAc,CAACL,IAAIN,GAAe,GAAGY,KAAKhB,EAAcF,SAASwB,IAR9C,SAUXM,YAAeD,GAVJ,cAYxBnC,EAAQqC,KAAKC,cAAcC,oBAAoBC,YAAY,CAAC7B,SAASA,KAZ7C,2CAAH,sDAiBtB,OACM,uBAAO8B,MAAM,0BAA0BC,OAAO,OAAOC,SAAUZ,EAA/D,UACI,sBAAKa,UAAU,OAAf,UACI,uBAAOA,UAAU,4BAA4BC,QAAQ,GAArD,4BACA,uBAAOD,UAAU,QAAQV,KAAK,OAAOV,KAAK,gBAC1CsB,SAAU,SAACpB,GAAD,OAAMjB,EAAgBiB,EAAEE,OAAOC,QACzCA,MAAOrB,GAAgB,GACvBuC,UAAQ,OAIRzC,EAAS2B,KAAI,SAAC9B,EAAQwB,GAClB,OACI,gCACA,wBAAOiB,UAAU,6BAA6BC,QAAQ,GAAtD,mBAEI,mBAAGD,UAAU,yCACTI,QAAS,YAjDb,SAAArB,GACxB,IAAMG,EAAgB,YAAOxB,GAC7BwB,EAAiBmB,OAAOtB,EAAO,GAC/BG,EAAiBoB,SAAQ,SAAC/C,EAAOwB,GAC7BxB,EAAOE,WAAWiB,OAAOK,MAE7BpB,EAAYuB,GA2C8BqB,CAAkBxB,IAChCyB,MAAO,CAACC,OAAO,gBAGvB,sBAAKT,UAAU,+BAAf,UAEC,uBAAOA,UAAU,YAAYV,KAAK,OAAOV,KAAK,SAAS8B,YAAY,gCAChER,SAAU,SAACpB,GAAD,OAAKD,EAAkBC,EAAEC,IACnCE,MAAO1B,EAAOA,QAAU,GACxBiD,MAAO,CAAChD,MAAMD,EAAOC,MAAQD,EAAOC,MAAQ,IAC5C2C,UAAQ,IAEX,uBAAOH,UAAU,YAAYV,KAAK,QAAQV,KAAK,QAC5CK,MAAO1B,EAAOC,OAAS,WACvB0C,SAAU,SAACpB,GAAD,OAAKD,EAAkBC,EAAEC,IACnCyB,MAAO,CAAEG,OAAQ,OAAQF,OAAQ,UAAWG,WAAY,QAAQC,QAAS,MAAOC,OAAQ,QACxFX,UAAQ,aAUxB,sBAAKH,UAAU,iCAAf,UACI,uBAAOA,UAAU,MAAMV,KAAK,SAASL,MAAM,WAC3C,uBAAOK,KAAK,SAASU,UAAU,uCAAuCI,QAnE7D,WACrBzC,EAAY,GAAD,mBAAKD,GAAL,CAAe,CAACH,OAAO,GAAGC,MAAM,UAAUC,WAAWiB,OAAOhB,EAASqD,aAkE2B9B,MAAM","file":"static/js/9.aeb0719a.chunk.js","sourcesContent":["import React,{useState, useEffect, useContext} from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport {customStatuses,getSpaceItem} from '../../actions/space';\r\nimport RouterPaths from '../RouterPaths'\r\n\r\nconst StatusTemplateForm = () => {\r\n    const history = useHistory();\r\n    const [statuses, setStatuses] = useState([{status:'open',color:'#000000',orderindex:'0'},{status:'close',color:'#0f077e',orderindex:'1'}]);\r\n    const [templateName, setTemplateName] = useState('');\r\n    const {space_id,template_id} = useParams();\r\n\r\n    useEffect(async()=>{\r\n        console.log(template_id);\r\n       const space = await getSpaceItem({_id:space_id});\r\n       console.log(space)\r\n       const [custom_status]=space.custom_statuses.filter(({_id})=>(String(_id ))== String(template_id))\r\n       console.log(custom_status)\r\n        if (custom_status) {\r\n           setStatuses(custom_status.statuses)\r\n           setTemplateName(custom_status.name)\r\n        }\r\n\r\n    },[template_id])\r\n    \r\n\r\n  // handle input change\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const updated_statuses = [...statuses];\r\n    updated_statuses[index][name] = value;\r\n    setStatuses(updated_statuses);\r\n  };\r\n \r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = index => {\r\n    const updated_statuses = [...statuses];\r\n    updated_statuses.splice(index, 1);\r\n    updated_statuses.forEach((status,index)=>{\r\n        status.orderindex=String(index);\r\n    })\r\n    setStatuses(updated_statuses);\r\n  };\r\n \r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    setStatuses([...statuses, {status:'',color:'#000000',orderindex:String(statuses.length)}]);\r\n  };\r\n\r\n\r\n  const handleFormSubmit = async(e)=>{\r\n    e.preventDefault();\r\n   const updated_statuses= statuses.map((status)=>{\r\n        status.type =templateName;\r\n        return status\r\n    })\r\n    const data = {\r\n        space_id:space_id,\r\n        custom_status:{_id:template_id || '',name:templateName, statuses:updated_statuses }        \r\n    }\r\n   let s= await customStatuses(data);\r\n\r\n   history.push(RouterPaths().StatusTemplatesView.urlPathText({space_id:space_id}))\r\n\r\n\r\n    }\r\n \r\n  return (\r\n        <form  class=\"status-form text-center\" method=\"post\" onSubmit={handleFormSubmit}>\r\n            <div className=\"mb-3\">\r\n                <label className=\"input-group-text fw-light\" htmlFor=\"\">Template Name:</label>\r\n                <input className=\"w-100\" type=\"text\" name=\"template_name\" \r\n                onChange={(e)=>(setTemplateName(e.target.value))}\r\n                value={templateName || ''}\r\n                required/>\r\n            </div>\r\n\r\n            {\r\n                statuses.map((status, index)=>{\r\n                    return(\r\n                        <div>\r\n                        <label className=\"input-group-text fw-light \" htmlFor=\"\">\r\n                            Status \r\n                            <i className=\" ml-auto text-danger fa-solid fa-xmark\" \r\n                                onClick={()=>{handleRemoveClick(index)}}\r\n                                style={{cursor:'pointer'}}></i>\r\n                        </label>\r\n                \r\n                        <div className='d-flex  align-content-center'>\r\n                \r\n                         <input className=\"flex-fill\" type=\"text\" name=\"status\" placeholder='e.g open, closed, in progress'\r\n                            onChange={(e)=>handleInputChange(e,index)} \r\n                            value={status.status || ''} \r\n                            style={{color:status.color ? status.color : ''}}\r\n                            required/>\r\n                \r\n                         <input className=\"flex-fill\" type=\"color\" name=\"color\" \r\n                            value={status.color || '#000000 '} \r\n                            onChange={(e)=>handleInputChange(e,index)}\r\n                            style={{ border: 'none', cursor: 'pointer', marginLeft: '-10px',padding: '0px', height: 'auto'}} \r\n                            required/>\r\n                \r\n                        </div>\r\n                \r\n                    </div>\r\n                    )\r\n                })\r\n            }\r\n         \r\n            \r\n            <div className='d-flex justify-content-between'>\r\n                <input className='btn' type=\"submit\" value=\"Submit\"/>\r\n                <input type='button' className='btn border border-dark rounded  my-2' onClick={handleAddClick} value='Add Status'/>\r\n            </div>\r\n\r\n        </form>\r\n  );\r\n}\r\n\r\nexport default StatusTemplateForm\r\n"],"sourceRoot":""}