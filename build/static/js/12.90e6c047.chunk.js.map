{"version":3,"sources":["components/task/TaskItem.js","components/task/TaskList.js","components/task/TaskStatusFilter.js","components/task/TaskView.js"],"names":["TaskItem","task","history","useHistory","useEffect","className","onClick","push","RouterPaths","TaskForm","urlPathText","space_id","workspace","project_id","project","task_id","_id","name","created_by","Date","created_at","toDateString","TaskList","status","tasks","style","backgroundColor","color","borderTop","map","index","TaskStatusFilter","statuses","filteredTasks","filter","String","TaskView","projectStore","useContext","ProjectContext","useState","setStatuses","setTasks","useParams","status_template","getTaskList","then","data","id","structureBtns","document","getElementById","addEventListener","e","structure","target","classList","contains","replace","add","listStyleType"],"mappings":"4JAwCeA,EApCE,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACTC,EAAUC,cAehB,OAVAC,qBAAU,WAGR,OAAO,eAGN,IAMC,wBAAQC,UAAU,mBAAmBC,QAhBjB,WACpBJ,EAAQK,KAAKC,cAAcC,SAASC,YAAY,CAACC,SAASV,EAAKW,UAAUC,WAAWZ,EAAKa,QAAQC,QAAQd,EAAKe,QAe9G,SACI,sBAAKX,UAAU,gBAAf,UACI,mBAAGA,UAAU,cAAb,SAA4BJ,EAAKgB,OACjC,gCACA,sBAAMZ,UAAU,sDAAhB,sBACA,sBAAMA,UAAU,oCAAhB,SAAqDJ,EAAKiB,WAAWD,UAErE,8BACA,sBAAMZ,UAAU,sDAAhB,SAAwE,IAAIc,KAAMlB,EAAKmB,YAAaC,yBCRrGC,EAnBE,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,OAAOC,EAAW,EAAXA,MACtB,OACI,mCACA,qBAAInB,UAAU,MAAd,UACI,qBAAKA,UAAU,uBAAuBoB,MAAO,CAACC,gBAAgB,GAAD,OAAKH,EAAOI,OAAQC,UAAU,kBAA3F,SACI,qBAAKvB,UAAU,aAAf,SAA8BkB,EAAOA,WAGrCC,EAAMK,KAAI,SAAC5B,EAAK6B,GACZ,OAAM,cAAC,EAAD,CAAU7B,KAAMA,GAAW6B,YCWtCC,EAnBU,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,SAASR,EAAW,EAAXA,MAChC,OACI,mCAEKQ,EAASH,KAAI,SAACN,EAAOO,GAElB,IAAMG,EAAcT,EAAMU,QAAO,SAACjC,GAC9B,GAAIA,EAAKsB,OACL,OAAOY,OAAOlC,EAAKsB,OAAOA,UAAWY,OAAOZ,EAAOA,WAG3D,OAAM,cAAC,EAAD,CAAUA,OAAQA,EAAQC,MAAOS,GAAoBH,S,QC6D5DM,UApEE,WACb,IAAOC,EAAeC,qBAAWC,KAA1BF,aACP,EAA6BG,mBAAS,IAAtC,mBAAOR,EAAP,KAAgBS,EAAhB,KACA,EAAuBD,mBAAS,IAAhC,mBAAOhB,EAAP,KAAakB,EAAb,KACA,EAA6BC,cAAb9B,GAAhB,EAAOF,SAAP,EAAgBE,YAGhBT,qBAAU,WACFiC,EAAaO,iBACbH,EAAYJ,EAAaO,gBAAgBZ,UAK7Ca,YAAY,CAAChC,WAAWA,IAAaiC,MAAK,SAACC,GACvCL,EAASK,QAId,CAACV,EAAaQ,MA0BjB,OACI,sBAAKxC,UAAU,GAAf,UACY,sBAAKA,UAAU,MAAM2C,GAAG,gBAAgB1C,QA1B7B,WACvB,IAAIyC,EAAM,GACNE,EAAcC,SAASC,eAAe,iBACzCF,GAILA,EAAcG,iBAAiB,SAAQ,SAACC,GAExC,IAAIC,EAAaJ,SAASC,eAAe,cAEzB,aAAbE,EAAEE,OAAOP,IAAmBM,EAAUE,UAAUC,SAAS,gBACxDV,EAAK,WACLO,EAAUE,UAAUE,QAAQ,cAAcX,IACxB,YAAbM,EAAEE,OAAOP,IAAmBM,EAAUE,UAAUC,SAAS,aAC9DV,EAAK,cACLO,EAAUE,UAAUE,QAAQ,WAAWX,IAEvCO,EAAUE,UAAUG,IAAI,gBAQZ,UACA,wBAAQX,GAAG,WAAW3C,UAAU,MAAhC,uBACA,wBAAQ2C,GAAG,YAAY3C,UAAU,MAAjC,2BAIA,oBAAK2C,GAAG,aAAa3C,UAAU,uEAAuEoB,MAAO,CAACmC,cAAc,QAA5H,SAEQ5B,EACA,mCACI,cAAC,EAAD,CAAkBR,MAAOA,EAAOQ,SAAUA,MAE7C","file":"static/js/12.90e6c047.chunk.js","sourcesContent":["import React,{useEffect} from 'react'\r\nimport {Link,useHistory,useParams} from 'react-router-dom'\r\nimport RouterPaths from '../../components/RouterPaths'\r\n\r\nconst TaskItem = ({task}) => {\r\n    const history = useHistory();\r\n    const handleTaskClick = ()=>{\r\n        history.push(RouterPaths().TaskForm.urlPathText({space_id:task.workspace,project_id:task.project,task_id:task._id}))\r\n\r\n    }\r\n    useEffect(() => {\r\n    //   console.log(task);\r\n    \r\n      return () => {\r\n        \r\n      }\r\n    }, [])\r\n    \r\n\r\n\r\n    return (\r\n\r\n        <button className=\"card m-3 mx-auto\" onClick={handleTaskClick}>\r\n            <div className=\"card-body p-2\">\r\n                <p className=\" card-title\">{task.name}</p>\r\n                <div>\r\n                <span className=\"fw-lighter fst-italic card-subtitle mb-2 text-muted\">Creator:</span>\r\n                <span className=\"fw-lighter fst-italic card-text  \">{task.created_by.name}</span>\r\n                </div>\r\n                <div>\r\n                <span className=\"fw-lighter fst-italic card-subtitle mb-2 text-muted\">{(new Date (task.created_at)).toDateString()}</span>\r\n                </div>\r\n                \r\n            </div>\r\n        </button>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default TaskItem\r\n","import React from 'react'\r\nimport TaskItem from './TaskItem'\r\n\r\nconst TaskList = ({status,tasks}) => {\r\n    return (\r\n        <>\r\n        <li className=\"col\">\r\n            <div className=\"card text-center m-3\" style={{backgroundColor: `${status.color}`,borderTop:'4px solid gray'}} >\r\n                <div className=\"text-white\" >{status.status}</div>\r\n            </div>\r\n            {\r\n                tasks.map((task,index)=>{\r\n                    return<TaskItem task={task} key={index}/>\r\n                    })\r\n            }\r\n        </li>\r\n    \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskList\r\n","import React from 'react'\r\nimport TaskItem from './TaskItem'\r\nimport TaskList from './TaskList'\r\n\r\nconst TaskStatusFilter = ({statuses,tasks}) => {\r\n    return (\r\n        <>\r\n        {\r\n             statuses.map((status,index)=>{\r\n                //  Filter task based on their status \r\n                const filteredTasks=tasks.filter((task)=>{\r\n                    if (task.status) {\r\n                        return String(task.status.status)=== String(status.status)\r\n                    }\r\n                }) \r\n                return<TaskList status={status} tasks={filteredTasks} key={index}/>\r\n            })\r\n        }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskStatusFilter\r\n","import React,{useState,useEffect,useContext} from 'react'\r\nimport {useParams } from 'react-router-dom';\r\nimport { ProjectContext , httpProjectAction} from \"../../context/ProjectContext\"\r\nimport TaskList from './TaskList'\r\nimport TaskStatusFilter from './TaskStatusFilter'\r\n\r\nimport { getTaskList } from '../../actions/task';\r\n\r\nconst TaskView = () => {\r\n    const {projectStore}= useContext(ProjectContext);\r\n    const [statuses,setStatuses]=useState([]);\r\n    const [tasks,setTasks]=useState([]);\r\n    const {space_id,project_id}= useParams();\r\n    // const [html,sethtml]=useState('<div>htllo</div>');\r\n\r\n    useEffect(() => {\r\n        if (projectStore.status_template) {\r\n            setStatuses(projectStore.status_template.statuses);\r\n        }\r\n\r\n        // console.log(projectStore)\r\n\r\n        getTaskList({project_id:project_id}).then((data)=>{\r\n            setTasks(data)\r\n        })\r\n\r\n       \r\n    }, [projectStore,getTaskList])\r\n\r\n    const changeViewStructure =()=>{\r\n        let data =''\r\n        let structureBtns=document.getElementById('structureBtns')\r\n    if (!structureBtns) {\r\n        return\r\n    }\r\n    // Change the structure either list view or board view for tasks\r\n    structureBtns.addEventListener(\"click\",(e)=>{\r\n        \r\n    let structure  = document.getElementById('#structure');\r\n    \r\n    if(e.target.id=='boardview' && structure.classList.contains('flex-column')){\r\n        data=\"flex-row\"\r\n        structure.classList.replace('flex-column',data)\r\n    }else if(e.target.id=='listview' &&  structure.classList.contains('flex-row')){\r\n        data=\"flex-column\"\r\n        structure.classList.replace('flex-row',data)\r\n    }else{\r\n        structure.classList.add('flex-row')\r\n    }\r\n    \r\n    })\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n                    <div className=\"m-3\" id=\"structureBtns\" onClick={changeViewStructure}>\r\n                    <button id=\"listview\" className=\"m-2\">LIST VIEW</button>\r\n                    <button id=\"boardview\" className=\"m-2\">BOARD VIEW</button>\r\n                    </div>  \r\n                    \r\n                             \r\n                    <ul  id=\"#structure\" className=\"pl-0 structure d-flex flex-row justify-content-between overflow-auto\" style={{listStyleType:'none'}}>\r\n                        {\r\n                            statuses ?\r\n                            <>\r\n                                <TaskStatusFilter tasks={tasks} statuses={statuses}/> \r\n                            </>\r\n                            :null\r\n                        }  \r\n                    </ul>\r\n                        \r\n                                                 \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default TaskView\r\n"],"sourceRoot":""}